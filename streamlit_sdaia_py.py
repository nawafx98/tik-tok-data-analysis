# -*- coding: utf-8 -*-
"""streamlit_sdaia.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-o6ucBj2BDsTMxFeFe8GVb7e6Mn8OwYT
"""

import streamlit as st
import numpy as np
import cv2
from PIL import Image
import yolov7

def process_image(image):
    # Convert the image to OpenCV format
    cv_image = cv2.cvtColor(np.array(image), cv2.COLOR_RGB2BGR)

    # Run the YOLOv7 model to detect objects
    model = yolov7.load('/content/best.pt')
    # set model parameters
    model.conf = 0.25  # NMS confidence threshold
    model.iou = 0.45  # NMS IoU threshold
      # (optional list) filter by class
    # perform inference
    results = model(cv_image)


    # Draw bounding boxes on the image
    for result in results:
        label, confidence, bbox = result
        x1, y1, x2, y2 = bbox
        cv2.rectangle(cv_image, (x1, y1), (x2, y2), (0, 255, 0), 2)
        cv2.putText(cv_image, f'{label}: {confidence:.2f}', (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

    # Convert the OpenCV image back to PIL format
    processed_image = Image.fromarray(cv2.cvtColor(cv_image, cv2.COLOR_BGR2RGB))

    return processed_image

st.title("YOLOv7 Object Detection")

# Upload an image
image_file = st.file_uploader("Upload an image", type=["jpg", "jpeg", "png"])

if image_file is not None:
    # Display the original image
    st.image(image_file, caption="Original Image", use_column_width=True)

    # Process the image
    image = Image.open(image_file)
    processed_image = process_image(image)

    # Display the processed image
    st.image(processed_image, caption="Processed Image", use_column_width=True)

